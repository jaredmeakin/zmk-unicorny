/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define THUMBS 36 37 38 39 40 41
#define SEARCH LS(LC(LA(LG(F20))))
#define ZMK_POINTING_DEFAULT_MOVE_VAL 1800  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

&mmv {
};

/ {
    combos {
        compatible = "zmk,combos";

        prev {
            bindings = <&mkp MB4>;
            key-positions = <7 8>;
            layers = <0 1 2 3 4 6>;
        };

        next {
            bindings = <&mkp MB5>;
            key-positions = <9 10>;
            layers = <0 1 2 3 4 6>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <11 10>;
            layers = <0 1 2 3 4 6>;
        };

        bt {
            bindings = <&sl 5>;
            key-positions = <11 10 9 8>;
            layers = <0>;
        };

        boot {
            bindings = <&bootloader>;
            key-positions = <5 4 3 2>;
            layers = <0>;
        };

        game {
            bindings = <&to 6>;
            key-positions = <33 35 34 32>;
            layers = <0>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <38 37>;
        };

        game-to-base {
            bindings = <&to 0>;
            key-positions = <33 35 34 32>;
            layers = <6>;
        };

        seek {
            bindings = <&kp LA(LC(F10))>;
            key-positions = <39 40>;
            layers = <0>;
        };
    };

    behaviors {
        hrml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L KEYS_R THUMBS>;
            hold-while-undecided;
        };

        hrmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R KEYS_L THUMBS>;
            hold-while-undecided;
        };

        enter_home_dance: enter_home_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "ENTER_HOME_DANCE";
            #binding-cells = <0>;
            bindings = <&kp ENTER>, <&to 0>;

            tapping-term-ms = <160>;
        };

        tab_caps_word_dance: tab_caps_word_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_CAPS_WORD_DANCE";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&caps_word>;
        };

        back_forward_dance: back_forward_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "BACK_FORWARD_DANCE";
            #binding-cells = <0>;
            bindings = <&kp LG(LEFT_BRACKET)>, <&kp LG(RIGHT_BRACKET)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp GRAVE             &kp Q          &kp W         &kp E         &kp R           &kp T        &kp Y              &kp U           &kp I         &kp O         &kp P             &kp BSPC
&tab_caps_word_dance  &hrml LCTRL A  &hrml LALT S  &hrml LGUI D  &hrml LSHIFT F  &kp G        &kp H              &hrmr LSHIFT J  &hrmr LGUI K  &hrmr LALT L  &hrmr LCTRL SEMI  &kp SQT
&back_forward_dance   &kp Z          &kp X         &kp C         &kp V           &kp B        &kp N              &kp M           &kp COMMA     &kp DOT       &kp FSLH          &kp BACKSLASH
                                                   &to 3         &to 1           &kp SPACE    &enter_home_dance  &kp MINUS       &kp EQUAL
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &none     &kp PAGE_UP  &kp UP    &kp PAGE_DOWN  &none    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp LEFT     &kp DOWN  &kp RIGHT      &kp END  &none
&trans  &trans  &trans  &trans  &trans  &trans    &none     &none        &trans    &trans         &trans   &trans
                        &to 3   &to 2   &trans    &trans    &trans       &trans
            >;
        };

        mouse {
            bindings = <
&trans  &none  &none           &msc SCRL_UP    &none            &none        &none   &mkp MB4          &mmv MOVE_UP    &mkp MB5         &none       &trans
&trans  &none  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &none        &none   &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none       &none
&trans  &none  &none           &none           &none            &none        &none   &kp C_PLAY_PAUSE  &kp C_VOL_DN    &kp C_VOLUME_UP  &kp C_PREV  &kp C_NEXT
                               &to 3           &to 1            &mkp LCLK    &trans  &mkp RCLK         &mkp MCLK
            >;
        };

        num {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans        &trans        &trans        &trans        &trans    &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans    &trans        &trans  &trans  &trans  &trans  &trans
                                    &to 4         &to 1         &trans    &trans        &trans  &trans
            >;
        };

        sym {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans  &trans  &trans  &trans
                        &to 3   &to 1   &trans    &trans                &trans                 &trans
            >;
        };

        bt {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &bt BT_PRV    &bt BT_NXT    &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &bt BT_CLR
                        &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };

        game {
            bindings = <
&kp ESC         &kp Q  &kp W  &kp E         &kp R             &kp T     &kp Y   &kp U   &kp I         &kp O    &kp P     &kp BSPC
&lt 3 TAB       &kp A  &kp S  &kp D         &kp F             &kp G     &kp H   &kp J   &kp K         &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V             &kp B     &kp N   &kp M   &kp COMMA     &kp DOT  &kp FSLH  &kp BSLH
                              &kp LEFT_ALT  &kp LEFT_CONTROL  &trans    &trans  &trans  &kp LEFT_GUI
            >;
        };
    };
};
